0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install', '-g', 'handlebars' ]
2 info using npm@1.2.2
3 info using node@v0.8.18
4 verbose read json /usr/local/lib/package.json
5 verbose read json /usr/local/lib/package.json
6 verbose cache add [ 'handlebars', null ]
7 verbose cache add name=undefined spec="handlebars" args=["handlebars",null]
8 verbose parsed url { pathname: 'handlebars',
8 verbose parsed url   path: 'handlebars',
8 verbose parsed url   href: 'handlebars' }
9 silly lockFile 9566e355-handlebars handlebars
10 verbose lock handlebars /Users/s0whyte/.npm/9566e355-handlebars.lock
11 silly lockFile 9566e355-handlebars handlebars
12 verbose addNamed [ 'handlebars', '' ]
13 verbose addNamed [ null, '' ]
14 silly lockFile 0ab5732f-handlebars handlebars@
15 verbose lock handlebars@ /Users/s0whyte/.npm/0ab5732f-handlebars.lock
16 silly addNameRange { name: 'handlebars', range: '', hasData: false }
17 verbose url raw handlebars
18 verbose url resolving [ 'https://registry.npmjs.org/', './handlebars' ]
19 verbose url resolved https://registry.npmjs.org/handlebars
20 info trying registry request attempt 1 at 10:36:12
21 http GET https://registry.npmjs.org/handlebars
22 http 200 https://registry.npmjs.org/handlebars
23 silly registry.get cb [ 200,
23 silly registry.get   { vary: 'Accept',
23 silly registry.get     server: 'CouchDB/1.2.1 (Erlang OTP/R15B03)',
23 silly registry.get     etag: '"3GA6KXYNR17E766QNNDXPBHEN"',
23 silly registry.get     date: 'Tue, 12 Mar 2013 17:36:13 GMT',
23 silly registry.get     'content-type': 'application/json',
23 silly registry.get     'content-length': '59808' } ]
24 silly addNameRange number 2 { name: 'handlebars', range: '', hasData: true }
25 silly addNameRange versions [ 'handlebars',
25 silly addNameRange   [ '1.0.2beta',
25 silly addNameRange     '1.0.4beta',
25 silly addNameRange     '1.0.5beta',
25 silly addNameRange     '1.0.6',
25 silly addNameRange     '1.0.6-2',
25 silly addNameRange     '1.0.7',
25 silly addNameRange     '1.0.8',
25 silly addNameRange     '1.0.9',
25 silly addNameRange     '1.0.10' ] ]
26 verbose addNamed [ 'handlebars', '1.0.10' ]
27 verbose addNamed [ '1.0.10', '1.0.10' ]
28 silly lockFile 4681da13-handlebars-1-0-10 handlebars@1.0.10
29 verbose lock handlebars@1.0.10 /Users/s0whyte/.npm/4681da13-handlebars-1-0-10.lock
30 silly lockFile 3a91b6c7-handlebars-handlebars-1-0-10-tgz https://registry.npmjs.org/handlebars/-/handlebars-1.0.10.tgz
31 verbose lock https://registry.npmjs.org/handlebars/-/handlebars-1.0.10.tgz /Users/s0whyte/.npm/3a91b6c7-handlebars-handlebars-1-0-10-tgz.lock
32 verbose addRemoteTarball [ 'https://registry.npmjs.org/handlebars/-/handlebars-1.0.10.tgz',
32 verbose addRemoteTarball   'd1c2f90921ca0755c9eb5f4b468d33db19f32c3b' ]
33 info retry fetch attempt 1 at 10:36:13
34 verbose fetch to= /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/tmp.tgz
35 http GET https://registry.npmjs.org/handlebars/-/handlebars-1.0.10.tgz
36 http 200 https://registry.npmjs.org/handlebars/-/handlebars-1.0.10.tgz
37 silly shasum updated bytes 40960
38 silly shasum updated bytes 5213
39 info shasum d1c2f90921ca0755c9eb5f4b468d33db19f32c3b
39 info shasum /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/tmp.tgz
40 verbose tar unpack /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/tmp.tgz
41 silly lockFile 39d9481b-73994-0-9613404322881252-package /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/package
42 verbose lock /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/package /Users/s0whyte/.npm/39d9481b-73994-0-9613404322881252-package.lock
43 silly gunzTarPerm modes [ '755', '644' ]
44 silly gunzTarPerm extractEntry package.json
45 silly gunzTarPerm extractEntry .npmignore
46 silly gunzTarPerm extractEntry LICENSE
47 silly gunzTarPerm extractEntry test.js
48 silly gunzTarPerm extractEntry dist/handlebars.js
49 silly gunzTarPerm extractEntry dist/handlebars.runtime.js
50 silly gunzTarPerm extractEntry handlebars-source.gemspec
51 silly gunzTarPerm extractEntry .jshintrc
52 silly gunzTarPerm extractEntry .rspec
53 silly gunzTarPerm extractEntry min.sh
54 silly gunzTarPerm extractEntry module-file-sizes.md
55 silly gunzTarPerm extractEntry bin/handlebars
56 silly gunzTarPerm extractEntry README.markdown
57 silly gunzTarPerm extractEntry lib/handlebars.js
58 silly gunzTarPerm extractEntry lib/handlebars/base.js
59 silly gunzTarPerm extractEntry lib/handlebars/browser-prefix.js
60 silly gunzTarPerm extractEntry lib/handlebars/browser-suffix.js
61 silly gunzTarPerm extractEntry lib/handlebars/runtime.js
62 silly gunzTarPerm extractEntry lib/handlebars/utils.js
63 silly gunzTarPerm extractEntry lib/handlebars/compiler/ast.js
64 silly gunzTarPerm extractEntry lib/handlebars/compiler/base.js
65 silly gunzTarPerm extractEntry lib/handlebars/compiler/compiler.js
66 silly gunzTarPerm extractEntry lib/handlebars/compiler/index.js
67 silly gunzTarPerm extractEntry lib/handlebars/compiler/parser.js
68 silly gunzTarPerm extractEntry lib/handlebars/compiler/printer.js
69 silly gunzTarPerm extractEntry lib/handlebars/compiler/visitor.js
70 silly gunzTarPerm extractEntry lib/handlebars/source.rb
71 verbose read json /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/package/package.json
72 silly lockFile 39d9481b-73994-0-9613404322881252-package /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/package
73 verbose from cache /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/package/package.json
74 verbose tar pack [ '/Users/s0whyte/.npm/handlebars/1.0.10/package.tgz',
74 verbose tar pack   '/var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/package' ]
75 verbose tarball /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz
76 verbose folder /var/folders/0r/_1kxc97538q8dr4r2g5kl83h0000gp/T/npm-28647/1363109773994-0.9613404322881252/package
77 silly lockFile 7f8775d9-pm-handlebars-1-0-10-package-tgz /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz
78 verbose lock /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz /Users/s0whyte/.npm/7f8775d9-pm-handlebars-1-0-10-package-tgz.lock
79 silly lockFile 7f8775d9-pm-handlebars-1-0-10-package-tgz /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz
80 silly lockFile 43205e14-te-npm-handlebars-1-0-10-package /Users/s0whyte/.npm/handlebars/1.0.10/package
81 verbose lock /Users/s0whyte/.npm/handlebars/1.0.10/package /Users/s0whyte/.npm/43205e14-te-npm-handlebars-1-0-10-package.lock
82 silly lockFile 43205e14-te-npm-handlebars-1-0-10-package /Users/s0whyte/.npm/handlebars/1.0.10/package
83 verbose tar unpack /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz
84 silly lockFile 43205e14-te-npm-handlebars-1-0-10-package /Users/s0whyte/.npm/handlebars/1.0.10/package
85 verbose lock /Users/s0whyte/.npm/handlebars/1.0.10/package /Users/s0whyte/.npm/43205e14-te-npm-handlebars-1-0-10-package.lock
86 silly gunzTarPerm modes [ '755', '644' ]
87 silly gunzTarPerm extractEntry package.json
88 silly gunzTarPerm extractEntry .npmignore
89 silly gunzTarPerm extractEntry LICENSE
90 silly gunzTarPerm extractEntry test.js
91 silly gunzTarPerm extractEntry dist/handlebars.js
92 silly gunzTarPerm extractEntry dist/handlebars.runtime.js
93 silly gunzTarPerm extractEntry handlebars-source.gemspec
94 silly gunzTarPerm extractEntry .jshintrc
95 silly gunzTarPerm extractEntry .rspec
96 silly gunzTarPerm extractEntry min.sh
97 silly gunzTarPerm extractEntry module-file-sizes.md
98 silly gunzTarPerm extractEntry bin/handlebars
99 silly gunzTarPerm extractEntry README.markdown
100 silly gunzTarPerm extractEntry lib/handlebars.js
101 silly gunzTarPerm extractEntry lib/handlebars/base.js
102 silly gunzTarPerm extractEntry lib/handlebars/browser-prefix.js
103 silly gunzTarPerm extractEntry lib/handlebars/browser-suffix.js
104 silly gunzTarPerm extractEntry lib/handlebars/runtime.js
105 silly gunzTarPerm extractEntry lib/handlebars/utils.js
106 silly gunzTarPerm extractEntry lib/handlebars/compiler/ast.js
107 silly gunzTarPerm extractEntry lib/handlebars/compiler/base.js
108 silly gunzTarPerm extractEntry lib/handlebars/compiler/compiler.js
109 silly gunzTarPerm extractEntry lib/handlebars/compiler/index.js
110 silly gunzTarPerm extractEntry lib/handlebars/compiler/parser.js
111 silly gunzTarPerm extractEntry lib/handlebars/compiler/printer.js
112 silly gunzTarPerm extractEntry lib/handlebars/compiler/visitor.js
113 silly gunzTarPerm extractEntry lib/handlebars/source.rb
114 verbose read json /Users/s0whyte/.npm/handlebars/1.0.10/package/package.json
115 silly lockFile 43205e14-te-npm-handlebars-1-0-10-package /Users/s0whyte/.npm/handlebars/1.0.10/package
116 silly shasum updated bytes 40960
117 silly shasum updated bytes 5212
118 info shasum 72d3e65fa230ff89d3a723372ca74d365bfc7f47
118 info shasum /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz
119 verbose from cache /Users/s0whyte/.npm/handlebars/1.0.10/package/package.json
120 verbose chmod /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz 644
121 verbose chown /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz [ 502, 20 ]
122 silly lockFile 3a91b6c7-handlebars-handlebars-1-0-10-tgz https://registry.npmjs.org/handlebars/-/handlebars-1.0.10.tgz
123 silly lockFile 4681da13-handlebars-1-0-10 handlebars@1.0.10
124 silly lockFile 0ab5732f-handlebars handlebars@
125 silly resolved [ { name: 'handlebars',
125 silly resolved     description: 'Extension of the Mustache logicless template language',
125 silly resolved     version: '1.0.10',
125 silly resolved     homepage: 'http://www.handlebarsjs.com/',
125 silly resolved     keywords: [ 'handlebars mustache template html' ],
125 silly resolved     repository:
125 silly resolved      { type: 'git',
125 silly resolved        url: 'git://github.com/wycats/handlebars.js.git' },
125 silly resolved     engines: { node: '>=0.4.7' },
125 silly resolved     dependencies: { optimist: '~0.3', 'uglify-js': '~1.2' },
125 silly resolved     devDependencies:
125 silly resolved      { benchmark: '~1.0',
125 silly resolved        dust: '~0.3',
125 silly resolved        jison: '~0.3',
125 silly resolved        mocha: '*',
125 silly resolved        mustache: '~0.7.2' },
125 silly resolved     main: 'lib/handlebars.js',
125 silly resolved     bin: { handlebars: 'bin/handlebars' },
125 silly resolved     scripts: { test: 'node_modules/.bin/mocha -u qunit spec/qunit_spec.js' },
125 silly resolved     optionalDependencies: {},
125 silly resolved     readme: '[![Build Status](https://travis-ci.org/wycats/handlebars.js.png?branch=master)](https://travis-ci.org/wycats/handlebars.js)\n\nHandlebars.js\n=============\n\nHandlebars.js is an extension to the [Mustache templating language](http://mustache.github.com/) created by Chris Wanstrath. Handlebars.js and Mustache are both logicless templating languages that keep the view and the code separated like we all know they should be.\n\nCheckout the official Handlebars docs site at [http://www.handlebarsjs.com](http://www.handlebarsjs.com).\n\n\nInstalling\n----------\nInstalling Handlebars is easy. Simply [download the package from GitHub](https://github.com/wycats/handlebars.js/archives/master) and add it to your web pages (you should usually use the most recent version).\n\nUsage\n-----\nIn general, the syntax of Handlebars.js templates is a superset of Mustache templates. For basic syntax, check out the [Mustache manpage](http://mustache.github.com/mustache.5.html).\n\nOnce you have a template, use the Handlebars.compile method to compile the template into a function. The generated function takes a context argument, which will be used to render the template.\n\n```js\nvar source = "<p>Hello, my name is {{name}}. I am from {{hometown}}. I have " +\n             "{{kids.length}} kids:</p>" +\n             "<ul>{{#kids}}<li>{{name}} is {{age}}</li>{{/kids}}</ul>";\nvar template = Handlebars.compile(source);\n\nvar data = { "name": "Alan", "hometown": "Somewhere, TX",\n             "kids": [{"name": "Jimmy", "age": "12"}, {"name": "Sally", "age": "4"}]};\nvar result = template(data);\n\n// Would render:\n// <p>Hello, my name is Alan. I am from Somewhere, TX. I have 2 kids:</p>\n// <ul>\n//   <li>Jimmy is 12</li>\n//   <li>Sally is 4</li>\n// </ul>\n```\n\n\nRegistering Helpers\n-------------------\n\nYou can register helpers that Handlebars will use when evaluating your\ntemplate. Here\'s an example, which assumes that your objects have a URL\nembedded in them, as well as the text for a link:\n\n```js\nHandlebars.registerHelper(\'link_to\', function(context) {\n  return "<a href=\'" + context.url + "\'>" + context.body + "</a>";\n});\n\nvar context = { posts: [{url: "/hello-world", body: "Hello World!"}] };\nvar source = "<ul>{{#posts}}<li>{{{link_to this}}}</li>{{/posts}}</ul>"\n\nvar template = Handlebars.compile(source);\ntemplate(context);\n\n// Would render:\n//\n// <ul>\n//   <li><a href=\'/hello-world\'>Hello World!</a></li>\n// </ul>\n```\n\nEscaping\n--------\n\nBy default, the `{{expression}}` syntax will escape its contents. This\nhelps to protect you against accidental XSS problems caused by malicious\ndata passed from the server as JSON.\n\nTo explicitly *not* escape the contents, use the triple-mustache\n(`{{{}}}`). You have seen this used in the above example.\n\n\nDifferences Between Handlebars.js and Mustache\n----------------------------------------------\nHandlebars.js adds a couple of additional features to make writing templates easier and also changes a tiny detail of how partials work.\n\n### Paths\n\nHandlebars.js supports an extended expression syntax that we call paths. Paths are made up of typical expressions and . characters. Expressions allow you to not only display data from the current context, but to display data from contexts that are descendents and ancestors of the current context.\n\nTo display data from descendent contexts, use the `.` character. So, for example, if your data were structured like:\n\n```js\nvar data = {"person": { "name": "Alan" }, company: {"name": "Rad, Inc." } };\n```\n\nyou could display the person\'s name from the top-level context with the following expression:\n\n```\n{{person.name}}\n```\n\nYou can backtrack using `../`. For example, if you\'ve already traversed into the person object you could still display the company\'s name with an expression like `{{../company.name}}`, so:\n\n```\n{{#person}}{{name}} - {{../company.name}}{{/person}}\n```\n\nwould render:\n\n```\nAlan - Rad, Inc.\n```\n\n### Strings\n\nWhen calling a helper, you can pass paths or Strings as parameters. For\ninstance:\n\n```js\nHandlebars.registerHelper(\'link_to\', function(title, context) {\n  return "<a href=\'/posts" + context.url + "\'>" + title + "!</a>"\n});\n\nvar context = { posts: [{url: "/hello-world", body: "Hello World!"}] };\nvar source = \'<ul>{{#posts}}<li>{{{link_to "Post" this}}}</li>{{/posts}}</ul>\'\n\nvar template = Handlebars.compile(source);\ntemplate(context);\n\n// Would render:\n//\n// <ul>\n//   <li><a href=\'/posts/hello-world\'>Post!</a></li>\n// </ul>\n```\n\nWhen you pass a String as a parameter to a helper, the literal String\ngets passed to the helper function.\n\n\n### Block Helpers\n\nHandlebars.js also adds the ability to define block helpers. Block helpers are functions that can be called from anywhere in the template. Here\'s an example:\n\n```js\nvar source = "<ul>{{#people}}<li>{{#link}}{{name}}{{/link}}</li>{{/people}}</ul>";\nHandlebars.registerHelper(\'link\', function(options) {\n  return \'<a href="/people/\' + this.id + \'">\' + options.fn(this) + \'</a>\';\n});\nvar template = Handlebars.compile(source);\n\nvar data = { "people": [\n    { "name": "Alan", "id": 1 },\n    { "name": "Yehuda", "id": 2 }\n  ]};\ntemplate(data);\n\n// Should render:\n// <ul>\n//   <li><a href="/people/1">Alan</a></li>\n//   <li><a href="/people/2">Yehuda</a></li>\n// </ul>\n```\n\nWhenever the block helper is called it is given two parameters, the argument that is passed to the helper, or the current context if no argument is passed and the compiled contents of the block. Inside of the block helper the value of `this` is the current context, wrapped to include a method named `__get__` that helps translate paths into values within the helpers.\n\n### Partials\n\nYou can register additional templates as partials, which will be used by\nHandlebars when it encounters a partial (`{{> partialName}}`). Partials\ncan either be String templates or compiled template functions. Here\'s an\nexample:\n\n```js\nvar source = "<ul>{{#people}}<li>{{> link}}</li>{{/people}}</ul>";\n\nHandlebars.registerPartial(\'link\', \'<a href="/people/{{id}}">{{name}}</a>\')\nvar template = Handlebars.compile(source);\n\nvar data = { "people": [\n    { "name": "Alan", "id": 1 },\n    { "name": "Yehuda", "id": 2 }\n  ]};\n\ntemplate(data);\n\n// Should render:\n// <ul>\n//   <li><a href="/people/1">Alan</a></li>\n//   <li><a href="/people/2">Yehuda</a></li>\n// </ul>\n```\n\n### Comments\n\nYou can add comments to your templates with the following syntax:\n\n```js\n{{! This is a comment }}\n```\n\nYou can also use real html comments if you want them to end up in the output.\n\n```html\n<div>\n    {{! This comment will not end up in the output }}\n    <!-- This comment will show up in the output -->\n</div>\n```\n\n\nPrecompiling Templates\n----------------------\n\nHandlebars allows templates to be precompiled and included as javascript\ncode rather than the handlebars template allowing for faster startup time.\n\n### Installation\nThe precompiler script may be installed via npm using the `npm install -g handlebars`\ncommand.\n\n### Usage\n\n<pre>\nPrecompile handlebar templates.\nUsage: handlebars template...\n\nOptions:\n  -a, --amd        Create an AMD format function (allows loading with RequireJS)         [boolean]\n  -f, --output     Output File                                                           [string]\n  -k, --known      Known helpers                                                         [string]\n  -o, --knownOnly  Known helpers only                                                    [boolean]\n  -m, --min        Minimize output                                                       [boolean]\n  -s, --simple     Output template function only.                                        [boolean]\n  -r, --root       Template root. Base value that will be stripped from template names.  [string]\n</pre>\n\nIf using the precompiler\'s normal mode, the resulting templates will be stored\nto the `Handlebars.templates` object using the relative template name sans the\nextension. These templates may be executed in the same manner as templates.\n\nIf using the simple mode the precompiler will generate a single javascript method.\nTo execute this method it must be passed to the using the `Handlebars.template`\nmethod and the resulting object may be as normal.\n\n### Optimizations\n\n- Rather than using the full _handlebars.js_ library, implementations that\n  do not need to compile templates at runtime may include _handlebars.runtime.js_\n  whose min+gzip size is approximately 1k.\n- If a helper is known to exist in the target environment they may be defined\n  using the `--known name` argument may be used to optimize accesses to these\n  helpers for size and speed.\n- When all helpers are known in advance the `--knownOnly` argument may be used\n  to optimize all block helper references.\n\n\nPerformance\n-----------\n\nIn a rough performance test, precompiled Handlebars.js templates (in the original version of Handlebars.js) rendered in about half the time of Mustache templates. It would be a shame if it were any other way, since they were precompiled, but the difference in architecture does have some big performance advantages. Justin Marney, a.k.a. [gotascii](http://github.com/gotascii), confirmed that with an [independent test](http://sorescode.com/2010/09/12/benchmarks.html). The rewritten Handlebars (current version) is faster than the old version, and we will have some benchmarks in the near future.\n\n\nBuilding\n--------\n\nTo build handlebars, just run `rake release`, and you will get two files\nin the `dist` directory.\n\n\nUpgrading\n---------\n\nWhen upgrading from the Handlebars 0.9 series, be aware that the\nsignature for passing custom helpers or partials to templates has\nchanged.\n\nInstead of:\n\n```js\ntemplate(context, helpers, partials, [data])\n```\n\nUse:\n\n```js\ntemplate(context, {helpers: helpers, partials: partials, data: data})\n```\n\nKnown Issues\n------------\n* Handlebars.js can be cryptic when there\'s an error while rendering.\n* Using a variable, helper, or partial named `class` causes errors in IE browsers. (Instead, use `className`)\n\nHandlebars in the Wild\n-----------------\n* [jblotus](http://github.com/jblotus) created [http://tryhandlebarsjs.com](http://tryhandlebarsjs.com) for anyone who would\nlike to try out Handlebars.js in their browser.\n* Don Park wrote an Express.js view engine adapter for Handlebars.js called [hbs](http://github.com/donpark/hbs).\n* [sammy.js](http://github.com/quirkey/sammy) by Aaron Quint, a.k.a. quirkey, supports Handlebars.js as one of its template plugins.\n* [SproutCore](http://www.sproutcore.com) uses Handlebars.js as its main templating engine, extending it with automatic data binding support.\n* [Ember.js](http://www.emberjs.com) makes Handlebars.js the primary way to structure your views, also with automatic data binding support.\n* Les Hill (@leshill) wrote a Rails Asset Pipeline gem named [handlebars_assets](http://github.com/leshill/handlebars_assets).\n\nHelping Out\n-----------\nTo build Handlebars.js you\'ll need a few things installed.\n\n* Node.js\n* Jison, for building the compiler - `npm install jison`\n* Ruby\n* therubyracer, for running tests - `gem install therubyracer`\n* rspec, for running tests - `gem install rspec`\n\nThere\'s a Gemfile in the repo, so you can run `bundle` to install rspec and therubyracer if you\'ve got bundler installed.\n\nTo build Handlebars.js from scratch, you\'ll want to run `rake compile` in the root of the project. That will build Handlebars and output the results to the dist/ folder. To run tests, run `rake spec`. You can also run our set of benchmarks with `rake bench`.\n\nIf you notice any problems, please report them to the GitHub issue tracker at [http://github.com/wycats/handlebars.js/issues](http://github.com/wycats/handlebars.js/issues). Feel free to contact commondream or wycats through GitHub with any other questions or feature requests. To submit changes fork the project and send a pull request.\n\nLicense\n-------\nHandlebars.js is released under the MIT license.\n',
125 silly resolved     readmeFilename: 'README.markdown',
125 silly resolved     _id: 'handlebars@1.0.10',
125 silly resolved     dist: { shasum: '72d3e65fa230ff89d3a723372ca74d365bfc7f47' },
125 silly resolved     _from: 'handlebars@',
125 silly resolved     _resolved: 'https://registry.npmjs.org/handlebars/-/handlebars-1.0.10.tgz' } ]
126 info install handlebars@1.0.10 into /usr/local/lib
127 info installOne handlebars@1.0.10
128 verbose from cache /Users/s0whyte/.npm/handlebars/1.0.10/package/package.json
129 info /usr/local/lib/node_modules/handlebars unbuild
130 verbose read json /usr/local/lib/node_modules/handlebars/package.json
131 verbose tar unpack /Users/s0whyte/.npm/handlebars/1.0.10/package.tgz
132 silly lockFile 7aff9bd5-ocal-lib-node-modules-handlebars /usr/local/lib/node_modules/handlebars
133 verbose lock /usr/local/lib/node_modules/handlebars /Users/s0whyte/.npm/7aff9bd5-ocal-lib-node-modules-handlebars.lock
134 silly gunzTarPerm modes [ '755', '644' ]
135 error Error: EACCES, mkdir '/usr/local/lib/node_modules/handlebars'
135 error  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/handlebars']
135 error   errno: 3,
135 error   code: 'EACCES',
135 error   path: '/usr/local/lib/node_modules/handlebars',
135 error   fstream_type: 'Directory',
135 error   fstream_path: '/usr/local/lib/node_modules/handlebars',
135 error   fstream_class: 'DirWriter',
135 error   fstream_stack:
135 error    [ 'DirWriter._create (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23)',
135 error      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
135 error      'Object.oncomplete (fs.js:297:15)' ] }
136 error Please try running this command again as root/Administrator.
137 error System Darwin 12.2.1
138 error command "node" "/usr/local/bin/npm" "install" "-g" "handlebars"
139 error cwd /Users/s0whyte/Bootcamp/handlebones
140 error node -v v0.8.18
141 error npm -v 1.2.2
142 error path /usr/local/lib/node_modules/handlebars
143 error fstream_path /usr/local/lib/node_modules/handlebars
144 error fstream_type Directory
145 error fstream_class DirWriter
146 error code EACCES
147 error errno 3
148 error stack Error: EACCES, mkdir '/usr/local/lib/node_modules/handlebars'
149 error fstream_stack DirWriter._create (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23)
149 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
149 error fstream_stack Object.oncomplete (fs.js:297:15)
150 verbose exit [ 3, true ]
